import os
import json
import socket
import datetime
import requests

import uuid

from fabric import task, Connection

from invoke import run

BASE_DIR = "/opt/src"

OPENAPI_GENERATOR_VERSION="4.3.1"
DEV_WEB_CLIENT_IP="192.168.205.21"
RELATIVE_PATH_TO_API_FILE = "api/swagger.json"

@task
def generateAPISpec(ctx):
    """generates a new swagger.json on disk. equivalent to curl -o http://127.0.0.1:9999/api/autogenerated/swagger.json >> RELATIVE_PATH_TO_API_FILE"""

    url = "http://127.0.0.1:9999/api/autogenerated/swagger.json"
    result = requests.get(url).json()
    with open(RELATIVE_PATH_TO_API_FILE,"w") as apifile:
        json.dump(result,apifile)


@task
def compileAPIClient(ctx):
    """generates a new Typescript rest client api from swagger.json on disk"""
    relative_path_to_api_file = RELATIVE_PATH_TO_API_FILE
    relative_path_to_libs_dir = "client/ionic/src/services/"
    output_api_library_name = "web2pyrestful"
    
    relative_path_to_lib_output = relative_path_to_libs_dir + output_api_library_name

    path = BASE_DIR + "/" + relative_path_to_api_file
    contents = json.load(open(path,"r"))

    api_url =  contents["servers"][0]["url"]
    print "[compileAPIClient]: %s" % api_url

    image = "openapitools/openapi-generator-cli:v%s" % OPENAPI_GENERATOR_VERSION

    docker_command = 'docker run --rm -v "%s:/local" %s' % (BASE_DIR,image)

    shell_cmd = 'generate -i /local/%s -g typescript-axios -o /local/%s' % (
        relative_path_to_api_file,relative_path_to_lib_output)
    
    cmd = docker_command + " " + shell_cmd

    result = run(cmd, hide=False, warn=True)

@task
def startDevWebClientServer(ctx):
    """start ionic web server on port 8100 without opeoning browser"""

    start_cmd = "ionic serve --host=%s --no-open" % DEV_WEB_CLIENT_IP

    cmd = "cd client/ionic && %s" % start_cmd
    result = run(cmd, hide=False, warn=True)
    

@task
def startDevAPIServer(ctx):
    """start web2py web server on port 9999 without gui (no admin)"""

    print "NOTE: no access to admin because not hosted on 127.0.0.1"

    start_cmd = "python web2py.py -a 'password' -i 0.0.0.0 -p 9999 --nogui"

    cmd = "cd server/web2py && %s" % start_cmd
    result = run(cmd, hide=False, warn=True)

@task
def startES(ctx):
    """start ephemeral elasticsearch on port 9200. modify settings in compose to add a volume and persist data"""
    print "modify settings in compose to add a volume and persist data"
    cmd = "docker-compose -f server/elasticsearch/docker-compose.yml up -d"
    result = run(cmd, hide=False, warn=True)
    

@task
def typescriptDebug(ctx):
    """check typescript compile diagnostics"""
    path = BASE_DIR + "/client/ionic"
    cmd = "cd %s && tsc --noEmit --diagnostics " % path
    result = run(cmd, hide=False, warn=True)
